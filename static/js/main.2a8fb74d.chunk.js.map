{"version":3,"sources":["../../src/utils/constants.ts","../../src/utils/helpers.ts","../../src/components/SchemaBox/SchemaBox.tsx","../../src/components/Label/Label.tsx","../../src/components/Input/Input.tsx","../../src/components/Input/Input.helpers.ts","../../src/components/Select/SchemaTypesSelect.tsx","../../src/components/Buttons/RoundedButton.tsx","../../src/components/Buttons/AddButton.tsx","../../src/components/Buttons/DeleteButton.tsx","../../src/components/Buttons/CollapseButton.tsx","../../src/components/Buttons/CloseButton.tsx","../../src/components/Buttons/MenuButton.tsx","../../src/components/Checkbox/Checkbox.tsx","../../src/components/Checkbox/Checkbox.helpers.ts","../../src/components/SchemaMenu/SchemaMenuItem.tsx","../../src/components/SchemaMenu/SchemaMenuList.tsx","../../src/components/SchemaMenu/SchemaMenu.tsx","../../src/components/Modal/Modal.tsx","../../src/components/SchemaCreator/SchemaControls.tsx","../../src/components/SchemaCreator/SchemaCreator.tsx","../../src/components/JSONSchemaBuilder/JSONSchemaBuilder.tsx","App.tsx","index.tsx"],"names":["defaultSchema","type","properties","schemaTypes","value","label","commonValidProperties","stringValidSchemaProperties","numberValidSchemaProperties","integerValidSchemaProperties","boolValidSchemaProperties","arrayValidSchemaProperties","objectValidSchemaProperties","commonSchemaOptions","stringSchemaOptions","optionList","numberSchemaOptions","integerSchemaOptions","boolSchemaOptions","objectSchemaOptions","typeToOptions","string","integer","number","boolean","array","object","typeToValidFields","getAllSchemaKeys","_","keys","getSchemaField","get","getSchemaFields","pick","getSchemaType","getSchemaTitle","getSchemaProperties","getSchemaItems","getSchemaRequired","setSchemaField","set","setSchemaType","setSchemaTitle","setSchemaProperties","setSchemaProperty","key","setSchemaItems","deleteSchemaField","unset","deleteSchemaProperty","addSchemaProperty","schema","now","renameSchemaField","oldKey","newKey","flow","entries","map","k","reduce","assign","renameSchemaProperty","p","isSchemaObject","isSchemaArray","hasSchemaProperties","isEmpty","findOption","find","optionsToStrings","stringsToOptions","s","fieldsToOptions","title","schemaPropertiesAsOptions","schemaRequiredPropertiesAsOptions","required","setSchemaTypeAndRemoveWrongFields","fields","SchemaBox","React","className","children","Label","Input","onChange","placeholder","useState","localVal","setLocalVal","useEffect","handler","onChangeValue","event","target","onKeyPress","onBlur","SchemaTypesSelect","Select","options","helpers","option","RoundedButton","onClick","noop","AddButton","FontAwesomeIcon","icon","faPlus","DeleteButton","faTrashAlt","CollapseButton","isCollapsed","faChevronRight","faChevronDown","CloseButton","faTimes","MenuButton","faEllipsisV","Checkbox","Toggle","checked","defaultChecked","Item","onDelete","TextItem","field","t","NumberItem","parseInt","BoolItem","CreatableMultiSelectItem","selected","allOptions","useMemo","CreatableSelect","isMulti","SelectItem","RequiredMultiSelectItem","requiredOptions","typeToItem","text","props","multi_creatable","select","SchemaMenuList","SchemaMenu","displayFields","filter","item","includes","difference","Modal","onClose","SchemaControls","schemakey","onChangeKey","onAdd","onCollapse","isMenuOpen","setIsMenuOpen","isFunction","o","SchemaArrayControls","SchemaCreator","isRequired","setIsCollapsed","faAsterisk","c","SchemaObjectProperties","oldkey","newkey","SchemaArrayItems","contains","newSchema","App","jsonSchema","setSchema","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a8fb74d.chunk.js","sourcesContent":["import {\r\n  ArraySchemaFieldOption,\r\n  ArrayValidSchemaField,\r\n  BoolSchemaFieldOption,\r\n  BoolValidSchemaField,\r\n  CommonSchemaFieldOption,\r\n  CommonValidSchemaField,\r\n  IntegerSchemaFieldOption,\r\n  IntegerValidSchemaField,\r\n  NumberSchemaFieldOption,\r\n  NumberValidSchemaField,\r\n  ObjectSchemaFieldOption,\r\n  ObjectValidSchemaField,\r\n  Schema,\r\n  SchemaMenuOption,\r\n  SchemaType,\r\n  SchemaTypeOption,\r\n  StringSchemaFieldOption,\r\n  StringValidSchemaField\r\n} from './types'\r\n\r\nexport const defaultSchema: Schema = {\r\n  type: 'object',\r\n  properties: {}\r\n}\r\n\r\nexport const schemaTypes: SchemaTypeOption[] = [\r\n  {\r\n    value: 'string',\r\n    label: 'Text'\r\n  },\r\n  {\r\n    value: 'integer',\r\n    label: 'Integer'\r\n  },\r\n  {\r\n    value: 'number',\r\n    label: 'Decimal'\r\n  },\r\n  {\r\n    value: 'boolean',\r\n    label: 'Boolean'\r\n  },\r\n  {\r\n    value: 'object',\r\n    label: 'Object'\r\n  },\r\n  {\r\n    value: 'array',\r\n    label: 'List'\r\n  }\r\n]\r\n\r\nexport const formatOptions = [\r\n  {\r\n    value: 'date-time',\r\n    label: 'Date'\r\n  },\r\n  {\r\n    value: 'email',\r\n    label: 'Email'\r\n  },\r\n  {\r\n    value: 'hostname',\r\n    label: 'Hostname'\r\n  },\r\n  {\r\n    value: 'ipv4',\r\n    label: 'IPv4'\r\n  },\r\n  {\r\n    value: 'ipv6',\r\n    label: 'IPv6'\r\n  },\r\n  {\r\n    value: 'uri',\r\n    label: 'URI'\r\n  }\r\n]\r\n\r\nconst commonValidProperties: CommonValidSchemaField[] = ['description', 'type' , 'title']\r\n\r\nexport const stringValidSchemaProperties: StringValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n  'enum',\r\n  'format',\r\n  'maxLength',\r\n  'minLength',\r\n  'pattern'\r\n]\r\n\r\nexport const numberValidSchemaProperties: NumberValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n  'maximum','minimum','multipleOf'\r\n]\r\n\r\nexport const integerValidSchemaProperties: IntegerValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n  'maximum','minimum','multipleOf'\r\n]\r\n\r\nexport const boolValidSchemaProperties: BoolValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n]\r\n\r\nexport const arrayValidSchemaProperties: ArrayValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n  'maxItems', 'minItems', 'uniqueItems', 'items'\r\n]\r\n\r\nexport const objectValidSchemaProperties: ObjectValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n  'required', 'properties'\r\n]\r\n\r\nconst commonSchemaOptions: CommonSchemaFieldOption[] = [\r\n  { value: 'description', label: 'Description', type: 'text' }\r\n]\r\n\r\nexport const stringSchemaOptions: StringSchemaFieldOption[] = [\r\n  ...commonSchemaOptions,\r\n  { value: 'minLength', label: 'Min Length', type: 'number' },\r\n  { value: 'maxLength', label: 'Max Length', type: 'number' },\r\n  { value: 'enum', label: 'Options', type: 'multi_creatable' },\r\n  { value: 'pattern', label: 'Pattern', type: 'text' },\r\n  {\r\n    value: 'format',\r\n    label: 'Format',\r\n    type: 'select',\r\n    optionList: formatOptions\r\n  }\r\n]\r\n\r\nexport const numberSchemaOptions: NumberSchemaFieldOption[] = [\r\n  ...commonSchemaOptions,\r\n  { value: 'minimum', label: 'Minimum', type: 'number' },\r\n  { value: 'maximum', label: 'Maximum', type: 'number' },\r\n  { value: 'multipleOf', label: 'Multiple of', type: 'number' }\r\n]\r\n\r\nexport const integerSchemaOptions: IntegerSchemaFieldOption[] = [\r\n  ...commonSchemaOptions,\r\n  { value: 'minimum', label: 'Minimum', type: 'number' },\r\n  { value: 'maximum', label: 'Maximum', type: 'number' },\r\n  { value: 'multipleOf', label: 'Multiple of', type: 'number' }\r\n]\r\n\r\nexport const boolSchemaOptions: BoolSchemaFieldOption[] = [\r\n  ...commonSchemaOptions\r\n]\r\n\r\nexport const objectSchemaOptions: ObjectSchemaFieldOption[] = [\r\n  ...commonSchemaOptions,\r\n  { value: 'required', label: 'Required fields', type: 'required' }\r\n]\r\n\r\nexport const arraySchemaOptions: ArraySchemaFieldOption[] = [\r\n  ...commonSchemaOptions,\r\n  { value: 'minItems', label: 'Min Items', type: 'number' },\r\n  { value: 'maxItems', label: 'Max Items', type: 'number' },\r\n  { value: 'uniqueItems', label: 'Unique Items', type: 'boolean' }\r\n]\r\n\r\nexport const typeToOptions: Record<SchemaType, SchemaMenuOption[]> = {\r\n  string: stringSchemaOptions,\r\n  integer: integerSchemaOptions,\r\n  number: numberSchemaOptions,\r\n  boolean: boolSchemaOptions,\r\n  array: arraySchemaOptions,\r\n  object: objectSchemaOptions\r\n}\r\n\r\nexport const typeToValidFields: Record<SchemaType, string[]> = {\r\n  string: stringValidSchemaProperties,\r\n  integer: integerValidSchemaProperties,\r\n  number: numberValidSchemaProperties,\r\n  boolean: boolValidSchemaProperties,\r\n  object: objectValidSchemaProperties,\r\n  array: arrayValidSchemaProperties\r\n}\r\n","import _ from 'lodash/fp'\r\nimport { typeToOptions, typeToValidFields } from './constants'\r\nimport { Schema, SchemaType } from './types'\r\n\r\nexport const getAllSchemaKeys = _.keys\r\n\r\nexport const getSchemaField = _.get\r\n\r\nexport const getSchemaFields = _.pick\r\n\r\nexport const getSchemaType = getSchemaField('type')\r\n\r\nexport const getSchemaTitle = getSchemaField('title')\r\n\r\nexport const getSchemaProperty = (key: string) =>\r\n  getSchemaField(['properties', key])\r\n\r\nexport const getSchemaProperties = getSchemaField('properties')\r\n\r\nexport const getSchemaItems = getSchemaField('items')\r\n\r\nexport const getSchemaRequired = getSchemaField('required')\r\n\r\nexport const getSchemaRequiredProperties = (schema: Schema) => {\r\n  const required = getSchemaRequired(schema)\r\n  const properties = getSchemaProperties(schema)\r\n  return getSchemaFields(required, properties)\r\n}\r\n\r\nexport const setSchemaField = _.set\r\n\r\nexport const setSchemaType = setSchemaField('type')\r\n\r\nexport const setSchemaTitle = setSchemaField('title')\r\n\r\nexport const setSchemaProperties = setSchemaField('properties')\r\n\r\nexport const setSchemaProperty = (key: string) =>\r\n  setSchemaField(['properties', key])\r\n\r\nexport const setSchemaItems = setSchemaField('items')\r\n\r\nexport const deleteSchemaField = _.unset\r\n\r\nexport const deleteSchemaProperty = (key: string) =>\r\n  deleteSchemaField(['properties', key])\r\n\r\nexport const addSchemaProperty = (schema: Schema) =>\r\n  setSchemaProperty(`__${_.now()}__`)({}, schema)\r\n\r\nexport const renameSchemaField = (oldKey: string, newKey: string) =>\r\n  //Rename field key but maintains object \"order\"\r\n  _.flow([\r\n    _.entries,\r\n    _.map(([k, v]) => ({ [k === oldKey ? newKey : k]: v })),\r\n    _.reduce(_.assign, {})\r\n  ])\r\n\r\nexport const renameSchemaProperty = (\r\n  oldKey: string,\r\n  newKey: string,\r\n  schema: Schema\r\n) =>\r\n  _.flow([\r\n    getSchemaProperties,\r\n    renameSchemaField(oldKey, newKey),\r\n    (p) => setSchemaProperties(p, schema)\r\n  ])(schema)\r\n\r\nexport const isSchemaObject = (schema: Schema) =>\r\n  getSchemaType(schema) === 'object'\r\n\r\nexport const isSchemaArray = (schema: Schema) =>\r\n  getSchemaType(schema) === 'array'\r\n\r\nexport const isFieldRequired = (key: string) =>\r\n   _.flow([getSchemaRequired, _.contains(key)])\r\n\r\nexport const hasSchemaProperties = (schema: Schema) =>\r\n  !_.isEmpty(getSchemaProperties(schema))\r\n\r\nexport const hasSchemaItems = (schema: Schema) =>\r\n  !_.isEmpty(getSchemaItems(schema))\r\n\r\nexport const getSchemaMenuOptions = (type: SchemaType) =>\r\n  _.get(type, typeToOptions)\r\n\r\nexport const findOption = (value: string) => _.find(['value', value])\r\n\r\nexport const optionsToStrings = _.map('value')\r\n\r\nexport const stringsToOptions = _.map((s) => ({ label: s, value: s }))\r\n\r\nexport const schemaFieldAsOption = (key: string, schema: Schema) => {\r\n  const title = getSchemaTitle(schema)\r\n  if (!_.isEmpty(title)) {\r\n    return { value: key, label: title }\r\n  }\r\n  return { value: key, label: key }\r\n}\r\n\r\nexport const fieldsToOptions = _.flow([\r\n  _.entries,\r\n  _.map(([key, val]) => schemaFieldAsOption(key, val))\r\n])\r\n\r\nexport const schemaPropertiesAsOptions = _.flow([\r\n  getSchemaProperties,\r\n  fieldsToOptions\r\n])\r\n\r\nexport const schemaRequiredPropertiesAsOptions = _.flow(\r\n  getSchemaRequiredProperties,\r\n  fieldsToOptions\r\n)\r\n\r\nexport const getValidFields = (type: SchemaType) => _.get(type, typeToValidFields)\r\n\r\nexport const removeWrongFields = (schema: Schema) => {\r\n  const type = getSchemaType(schema)\r\n  const fields = getValidFields(type)\r\n  return getSchemaFields(fields, schema)\r\n}\r\n\r\nexport const setSchemaTypeAndRemoveWrongFields = _.flow([setSchemaType, removeWrongFields])\r\n","import React from 'react'\r\n\r\nconst SchemaBox: React.FunctionComponent = ({children}) => {\r\n  return(\r\n    <div className=\"w-full border-l border-b border-blue-400 pl-2 pb-2 pt-2 rounded-bl\">\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SchemaBox","import React from 'react'\r\n\r\nconst Label: React.FunctionComponent = ({ children }) => (\r\n  <label className='text-sm text-gray-700'>{children}</label>\r\n)\r\n\r\nexport default Label\r\n","import React from 'react'\r\nimport { Label } from '../Label'\r\nimport { handleEnterPress, handleStringChange } from './Input.helpers'\r\n\r\ntype Props = {\r\n  onChange: (text: string) => void\r\n  placeholder?: string\r\n  value?: string\r\n  label?: string\r\n  type?: string\r\n}\r\n\r\nconst Input: React.FunctionComponent<Props> = ({\r\n  onChange,\r\n  placeholder,\r\n  value = '',\r\n  label,\r\n  type = 'text'\r\n}: Props) => {\r\n  const [localVal, setLocalVal] = React.useState<string>('')\r\n\r\n  React.useEffect(() => {\r\n    setLocalVal(value)\r\n  }, [value])\r\n\r\n  const onChangeValue = () => {\r\n    if (localVal === value) return\r\n\r\n    onChange(localVal)\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <Label>{label}</Label>\r\n      <input\r\n        type={type}\r\n        value={localVal}\r\n        onChange={handleStringChange(setLocalVal)}\r\n        onKeyPress={handleEnterPress(onChangeValue)}\r\n        onBlur={onChangeValue}\r\n        placeholder={placeholder}\r\n        className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline-blue focus:border-blue-500'\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","export const handleStringChange = (handler: (value: string) => void) => {\r\n  return (event: React.FormEvent<HTMLElement>): void => {\r\n    handler((event.target as HTMLInputElement).value);\r\n  };\r\n}\r\n\r\nexport const handleEnterPress = (handler: () => void) => {\r\n  return (event: React.KeyboardEvent<HTMLInputElement>): void => {\r\n    if (event.key === 'Enter') {\r\n      handler();\r\n    }\r\n  };\r\n}","import React from 'react'\r\nimport Select from 'react-select'\r\nimport { schemaTypes } from '../../utils/constants'\r\nimport * as helpers from '../../utils/helpers'\r\nimport { SchemaType } from '../../utils/types'\r\nimport { Label } from '../Label'\r\n\r\ntype Props = {\r\n  type: SchemaType\r\n  onChange: (type: SchemaType) => void\r\n}\r\n\r\nconst SchemaTypesSelect: React.FunctionComponent<Props> = ({\r\n  type,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <div>\r\n      <Label>Type</Label>\r\n      <Select\r\n        className=' min-w-48 max-w-lg w-full shadow rounded border-gray-300 bg-white focus:outline-none focus:shadow-outline-blue focus:border-blue-300'\r\n        options={schemaTypes}\r\n        value={helpers.findOption(type)(schemaTypes)}\r\n        onChange={(option: any) => onChange(option.value)}\r\n        placeholder='Type'\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SchemaTypesSelect\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  className?: string,\r\n  title?: string\r\n  children: React.ReactNode\r\n}\r\n\r\nconst RoundedButton: React.FunctionComponent<Props> = ({ onClick=_.noop, className='', children, title }: Props) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      title={title}\r\n      className={`flex items-center border focus:outline-none focus:shadow-outline-blue \r\n      focus:border-blue-500 text-sm justify-center shadow w-8 h-8 rounded-full ${className}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default RoundedButton\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport RoundedButton from './RoundedButton'\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  title?: string\r\n}\r\n\r\nconst AddButton: React.FunctionComponent<Props> = ({ onClick=_.noop, title }: Props) => {\r\n  return (\r\n    <RoundedButton\r\n      onClick={onClick}\r\n      title={title}\r\n      className='text-white bg-blue-500 hover:bg-blue-700'\r\n    >\r\n      <FontAwesomeIcon icon={faPlus} />\r\n    </RoundedButton>\r\n  )\r\n}\r\n\r\nexport default AddButton\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport RoundedButton from './RoundedButton'\r\n\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  title?: string\r\n}\r\n\r\nconst DeleteButton: React.FunctionComponent<Props> = ({ onClick=_.noop, title }: Props) => {\r\n  return (\r\n    <RoundedButton\r\n      onClick={onClick}\r\n      title={title}\r\n      className='text-white bg-red-500 hover:bg-red-700'\r\n    >\r\n      <FontAwesomeIcon icon={faTrashAlt} />\r\n    </RoundedButton>\r\n  )\r\n}\r\n\r\nexport default DeleteButton\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport { faChevronRight, faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport RoundedButton from './RoundedButton'\r\n\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  isCollapsed?: boolean\r\n  title?: string\r\n}\r\n\r\nconst CollapseButton: React.FunctionComponent<Props> = ({isCollapsed=false, onClick=_.noop, title}: Props) => {\r\n  return (\r\n    <RoundedButton\r\n      onClick={onClick}\r\n      title={title}\r\n      className='text-white bg-gray-500 hover:bg-gray-600'\r\n    >\r\n      <FontAwesomeIcon icon={isCollapsed ? faChevronRight : faChevronDown} />\r\n    </RoundedButton>\r\n  )\r\n}\r\n\r\nexport default CollapseButton","import React from 'react'\r\nimport _ from 'lodash/fp'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport RoundedButton from './RoundedButton'\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  title?: string\r\n}\r\n\r\nconst CloseButton: React.FunctionComponent<Props> = ({ onClick=_.noop, title }: Props) => {\r\n  return (\r\n    <RoundedButton\r\n      onClick={onClick}\r\n      title={title}\r\n      className='text-gray-800 bg-white hover:bg-gray-200'\r\n    >\r\n      <FontAwesomeIcon icon={faTimes} />\r\n    </RoundedButton>\r\n  )\r\n}\r\n\r\nexport default CloseButton\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport RoundedButton from './RoundedButton'\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  title?: string\r\n}\r\n\r\nconst MenuButton: React.FunctionComponent<Props> = ({ onClick=_.noop, title }: Props) => {\r\n  return (\r\n    <RoundedButton\r\n      onClick={onClick}\r\n      title={title}\r\n      className='text-gray-800 bg-white hover:bg-gray-200'\r\n    >\r\n      <FontAwesomeIcon icon={faEllipsisV} />\r\n    </RoundedButton>\r\n  )\r\n}\r\n\r\nexport default MenuButton\r\n","import React from 'react'\r\nimport Toggle from 'react-toggle'\r\nimport 'react-toggle/style.css'\r\n\r\nimport { Label } from '../Label'\r\nimport { handleChange } from './Checkbox.helpers'\r\n\r\ntype Props = {\r\n  value: boolean\r\n  onChange: (v: boolean) => void\r\n  label?: string\r\n}\r\n\r\nconst Checkbox: React.FunctionComponent<Props> = ({\r\n  label,\r\n  value,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <div className='flex flex-row'>\r\n      <Label>{label}</Label>\r\n      <Toggle\r\n        onChange={handleChange(onChange)}\r\n        defaultChecked={value}\r\n        className='ml-2'\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checkbox\r\n","export const handleChange = (handler: (value: boolean) => void) => {\r\n  return (event: React.FormEvent<HTMLElement>): void => {\r\n    handler((event.target as HTMLInputElement).checked);\r\n  };\r\n}","import React from 'react'\r\nimport CreatableSelect from 'react-select/creatable'\r\nimport Select from 'react-select'\r\n\r\nimport { Schema, SchemaMenuOption } from '../../utils/types'\r\nimport * as helpers from '../../utils/helpers'\r\nimport { Input } from '../Input'\r\nimport { DeleteButton } from '../Buttons'\r\nimport { Checkbox } from '../Checkbox'\r\nimport { Label } from '../Label'\r\n\r\ntype ItemProps = {\r\n  onDelete: () => void\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Item: React.FunctionComponent<ItemProps> = ({\r\n  children,\r\n  onDelete\r\n}: ItemProps) => {\r\n  return (\r\n    <div className='flex items-end justify-between'>\r\n      {children}\r\n      <div className='ml-2'>\r\n        <DeleteButton onClick={onDelete} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ntype Props = {\r\n  field: SchemaMenuOption\r\n  schema: Schema\r\n  onChange: (schema: Schema) => void\r\n}\r\n\r\nexport const TextItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <Input\r\n        label={field.label}\r\n        value={helpers.getSchemaField(field.value, schema) as string}\r\n        onChange={(t) =>\r\n          onChange(helpers.setSchemaField(field.value, t, schema))\r\n        }\r\n      />\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport const NumberItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <Input\r\n        label={field.label}\r\n        type={'number'}\r\n        value={helpers.getSchemaField(field.value, schema) as string}\r\n        onChange={(t) =>\r\n          onChange(helpers.setSchemaField(field.value, parseInt(t, 10), schema))\r\n        }\r\n      />\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport const BoolItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <Checkbox\r\n        label={field.label}\r\n        value={helpers.getSchemaField(field.value, schema) as boolean}\r\n        onChange={(t) =>\r\n          onChange(helpers.setSchemaField(field.value, t, schema))\r\n        }\r\n      />\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport const CreatableMultiSelectItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  const selected = helpers.getSchemaField(field.value, schema)\r\n\r\n  const allOptions = React.useMemo(\r\n    () => helpers.stringsToOptions(selected as string[]),\r\n    [selected]\r\n  )\r\n\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <div className='w-full'>\r\n        <Label>{field.label}</Label>\r\n        <CreatableSelect\r\n          isMulti\r\n          className='min-w-48 max-w-lg w-full shadow rounded border-gray-300 bg-white focus:outline-none focus:shadow-outline-blue focus:border-blue-300'\r\n          options={allOptions}\r\n          value={allOptions}\r\n          onChange={(options: any) => {\r\n            onChange(\r\n              helpers.setSchemaField(\r\n                field.value,\r\n                helpers.optionsToStrings(options),\r\n                schema\r\n              )\r\n            )\r\n          }}\r\n          placeholder='Options'\r\n        />\r\n      </div>\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport const SelectItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  const option = helpers.getSchemaField(field.value, schema)\r\n  const selected = React.useMemo(\r\n    () => helpers.findOption(option as string)(field.optionList),\r\n    [field.optionList, option]\r\n  )\r\n\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <div className='w-full'>\r\n        <Label>{field.label}</Label>\r\n        <Select\r\n          className='min-w-48 max-w-lg w-full shadow rounded border-gray-300 bg-white focus:outline-none focus:shadow-outline-blue focus:border-blue-300'\r\n          options={field.optionList}\r\n          value={selected}\r\n          onChange={(option: any) => {\r\n            onChange(helpers.setSchemaField(field.value, option.value, schema))\r\n          }}\r\n          placeholder='Options'\r\n        />\r\n      </div>\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport const RequiredMultiSelectItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  if (!helpers.isSchemaObject(schema) || !helpers.hasSchemaProperties(schema))\r\n    return null\r\n\r\n  const allOptions = helpers.schemaPropertiesAsOptions(schema)\r\n  const requiredOptions = helpers.schemaRequiredPropertiesAsOptions(schema)\r\n\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <div className='w-full'>\r\n        <Label>{field.label}</Label>\r\n        <Select\r\n          isMulti\r\n          className='min-w-48 max-w-lg w-full shadow rounded border-gray-300 bg-white focus:outline-none focus:shadow-outline-blue focus:border-blue-300'\r\n          options={allOptions}\r\n          value={requiredOptions}\r\n          onChange={(options: any) => {\r\n            onChange(\r\n              helpers.setSchemaField(\r\n                field.value,\r\n                helpers.optionsToStrings(options),\r\n                schema\r\n              )\r\n            )\r\n          }}\r\n          placeholder='Options'\r\n        />\r\n      </div>\r\n    </Item>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Schema,\r\n  SchemaFieldOptionType,\r\n  SchemaMenuOption\r\n} from '../../utils/types'\r\nimport {\r\n  BoolItem,\r\n  CreatableMultiSelectItem,\r\n  NumberItem,\r\n  RequiredMultiSelectItem,\r\n  SelectItem,\r\n  TextItem\r\n} from './SchemaMenuItem'\r\n\r\nconst typeToItem: Record<\r\n  SchemaFieldOptionType,\r\n  React.FunctionComponent<any>\r\n> = {\r\n  text: (props) => <TextItem {...props} />,\r\n  number: (props) => <NumberItem {...props} />,\r\n  boolean: (props) => <BoolItem {...props} />,\r\n  multi_creatable: (props) => <CreatableMultiSelectItem {...props} />,\r\n  select: (props) => <SelectItem {...props} />,\r\n  required: (props) => <RequiredMultiSelectItem {...props} />\r\n}\r\n\r\ntype Props = {\r\n  fields: SchemaMenuOption[]\r\n  schema: Schema\r\n  onChange: (schema: Schema) => void\r\n}\r\n\r\nconst SchemaMenuList: React.FunctionComponent<Props> = ({\r\n  fields,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <ul className='mb-4 grid gap-2'>\r\n      {fields.map((field) => (\r\n        <li key={field.value} className=''>\r\n          {typeToItem[field.type]({ schema, onChange, field })}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SchemaMenuList\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport { Schema, SchemaMenuOption } from '../../utils/types'\r\nimport * as helpers from '../../utils/helpers'\r\nimport Select from 'react-select'\r\nimport SchemaMenuList from './SchemaMenuList'\r\n\r\ntype Props = {\r\n  schema: Schema\r\n  onChange: (schema: Schema) => void\r\n}\r\n\r\nconst SchemaMenu: React.FunctionComponent<Props> = ({\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  const type = helpers.getSchemaType(schema)\r\n\r\n  const allOptions = React.useMemo(() => helpers.getSchemaMenuOptions(type), [\r\n    type\r\n  ])\r\n\r\n  const displayFields = React.useMemo(() => {\r\n    const fields = helpers.getAllSchemaKeys(schema)\r\n    return _.filter((item) => _.includes(item.value, fields), allOptions)\r\n  }, [schema, allOptions])\r\n\r\n  return (\r\n    <div className='min-w-md'>\r\n      <SchemaMenuList\r\n        fields={displayFields}\r\n        schema={schema}\r\n        onChange={onChange}\r\n      />\r\n      <Select\r\n        className='min-w-48 max-w-lg w-full shadow rounded border-gray-300 bg-white focus:outline-none focus:shadow-outline-blue focus:border-blue-300'\r\n        options={_.difference(allOptions, displayFields)}\r\n        value={null}\r\n        onChange={(option: any) =>\r\n          onChange(\r\n            helpers.setSchemaField(\r\n              (option as SchemaMenuOption).value,\r\n              undefined,\r\n              schema\r\n            )\r\n          )\r\n        }\r\n        placeholder='Add fields'\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SchemaMenu\r\n","import React from 'react'\r\nimport { CloseButton } from '../Buttons'\r\n\r\ntype Props = {\r\n  onClose: () => void\r\n  children?: React.ReactNode\r\n  title?: string | React.ReactNode\r\n}\r\n\r\nconst Modal: React.FunctionComponent<Props> = ({\r\n  onClose,\r\n  children,\r\n  title\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className='justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none'>\r\n        <div className='relative w-auto my-6 mx-auto max-w-3xl'>\r\n          <div className='p-2 rounded shadow relative flex flex-col w-full bg-white outline-none focus:outline-none'>\r\n            <div className='flex items-end justify-between'>\r\n              <h3 className='font-semibold text-xl'>{title}</h3>\r\n              <CloseButton onClick={onClose} />\r\n            </div>\r\n            <div className='mt-2'>{children}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='opacity-25 fixed inset-0 z-40 bg-black'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport { Input } from '../Input'\r\nimport { SchemaTypesSelect } from '../Select'\r\nimport * as helpers from '../../utils/helpers'\r\nimport { Schema } from '../../utils/types'\r\nimport { AddButton, CollapseButton, DeleteButton, MenuButton } from '../Buttons'\r\nimport { SchemaMenu } from '../SchemaMenu'\r\nimport { Modal } from '../Modal'\r\n\r\ntype Props = {\r\n  schema: Schema\r\n  schemakey: string\r\n  isCollapsed?: boolean\r\n  onDelete?: () => void\r\n  onAdd?: () => void\r\n  onCollapse?: () => void\r\n  onChangeKey?: (key: string) => void\r\n  onChange: (schema: Schema) => void\r\n}\r\n\r\nexport const SchemaControls: React.FunctionComponent<Props> = ({\r\n  schema,\r\n  schemakey,\r\n  isCollapsed,\r\n  onDelete,\r\n  onChange,\r\n  onChangeKey,\r\n  onAdd,\r\n  onCollapse\r\n}: Props) => {\r\n  const [isMenuOpen, setIsMenuOpen] = React.useState<boolean>(false)\r\n\r\n  return (\r\n    <div className='flex flex-row items-end'>\r\n      <div className='grid grid-flow-col gap-2 mr-2'>\r\n        <Input\r\n          value={helpers.getSchemaTitle(schema)}\r\n          onChange={(t) => onChange(helpers.setSchemaTitle(t, schema))}\r\n          placeholder='Title'\r\n          label='Title'\r\n        />\r\n        <SchemaTypesSelect\r\n          type={helpers.getSchemaType(schema)}\r\n          onChange={(t) => onChange(helpers.setSchemaTypeAndRemoveWrongFields(t, schema))}\r\n        />\r\n        {_.isFunction(onChangeKey) ? (\r\n          <Input\r\n            value={schemakey}\r\n            onChange={onChangeKey}\r\n            placeholder='Key'\r\n            label='Key'\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div className='grid grid-flow-col items-center gap-1'>\r\n        {_.isFunction(onCollapse) ? (\r\n          <CollapseButton\r\n            onClick={onCollapse}\r\n            isCollapsed={isCollapsed}\r\n            title={'Collapse schema'}\r\n          />\r\n        ) : null}\r\n        <MenuButton\r\n          onClick={() => setIsMenuOpen((o) => !o)}\r\n          title={'Open extra options menu'}\r\n        />\r\n        {_.isFunction(onDelete) ? (\r\n          <DeleteButton onClick={onDelete} title={'Delete schema'} />\r\n        ) : null}\r\n        {_.isFunction(onAdd) ? (\r\n          <AddButton onClick={onAdd} title={'Add schema'} />\r\n        ) : null}\r\n      </div>\r\n      {isMenuOpen ? (\r\n        <Modal onClose={() => setIsMenuOpen(false)} title={'Extra fields'}>\r\n          <SchemaMenu schema={schema} onChange={onChange} />\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\ntype ArrayProps = {\r\n  schema: Schema\r\n  onChange: (schema: Schema) => void\r\n  onAdd?: () => void\r\n}\r\n\r\nexport const SchemaArrayControls: React.FunctionComponent<ArrayProps> = ({\r\n  schema,\r\n  onChange,\r\n  onAdd\r\n}: ArrayProps) => {\r\n  const [isMenuOpen, setIsMenuOpen] = React.useState<boolean>(false)\r\n\r\n  return (\r\n    <div className='flex items-end'>\r\n      <SchemaTypesSelect\r\n        type={helpers.getSchemaType(schema)}\r\n        onChange={(t) => onChange(helpers.setSchemaTypeAndRemoveWrongFields(t, schema))}\r\n      />\r\n      <div className='ml-2 grid grid-flow-col gap-1'>\r\n        <MenuButton\r\n          onClick={() => setIsMenuOpen((o) => !o)}\r\n          title={'Open extra options menu'}\r\n        />\r\n        {_.isFunction(onAdd) ? (\r\n          <AddButton onClick={onAdd} title={'Add schema'} />\r\n        ) : null}\r\n      </div>\r\n      {isMenuOpen ? (\r\n        <Modal onClose={() => setIsMenuOpen(false)} title={'Extra fields'}>\r\n          <SchemaMenu schema={schema} onChange={onChange} />\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport { Schema } from '../../utils/types'\r\nimport * as helpers from '../../utils/helpers'\r\nimport { SchemaBox } from '../SchemaBox'\r\nimport { SchemaControls, SchemaArrayControls } from './SchemaControls'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAsterisk } from '@fortawesome/free-solid-svg-icons'\r\n\r\ntype Props = {\r\n  schema: Schema\r\n  schemakey?: string\r\n  isRequired?: boolean\r\n  onChangeKey?: (key: string) => void\r\n  onDelete?: (key: string) => void\r\n  onChange?: (schema: Schema) => void\r\n}\r\n\r\nconst SchemaCreator: React.FunctionComponent<Props> = ({\r\n  schema,\r\n  onChangeKey = _.noop,\r\n  onChange = _.noop,\r\n  onDelete = _.noop,\r\n  schemakey = '__root__',\r\n  isRequired\r\n}: Props) => {\r\n  const [isCollapsed, setIsCollapsed] = React.useState<boolean>(false)\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-end\">\r\n        {isRequired && <FontAwesomeIcon icon={faAsterisk} className='mr-2 mb-3 text-xs' title={'Required'}/>}\r\n        <SchemaControls\r\n          schema={schema}\r\n          schemakey={schemakey}\r\n          isCollapsed={isCollapsed}\r\n          onChangeKey={schemakey !== '__root__' ? onChangeKey : undefined}\r\n          onAdd={\r\n            helpers.isSchemaObject(schema)\r\n              ? () => onChange(helpers.addSchemaProperty(schema))\r\n              : undefined\r\n          }\r\n          onCollapse={\r\n            helpers.isSchemaObject(schema) || helpers.isSchemaArray(schema)\r\n              ? () => setIsCollapsed((c) => !c)\r\n              : undefined\r\n          }\r\n          onDelete={\r\n            schemakey !== '__root__' ? () => onDelete(schemakey) : undefined\r\n          }\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className={`${isCollapsed ? 'hidden' : 'block'}`}>\r\n        {helpers.isSchemaObject(schema) && helpers.hasSchemaProperties(schema) && (\r\n          <SchemaBox>\r\n            <SchemaObjectProperties\r\n              onChangeKey={(oldkey, newkey) =>\r\n                onChange(helpers.renameSchemaProperty(oldkey, newkey, schema))\r\n              }\r\n              onDelete={(key) =>\r\n                onChange(helpers.deleteSchemaProperty(key)(schema))\r\n              }\r\n              onChange={(key, s) =>\r\n                onChange(helpers.setSchemaProperty(key)(s, schema))\r\n              }\r\n              schema={schema}\r\n            />\r\n          </SchemaBox>\r\n        )}\r\n        {helpers.isSchemaArray(schema) && (\r\n          <SchemaBox>\r\n            <SchemaArrayItems\r\n              schema={helpers.getSchemaItems(schema)}\r\n              onChange={(s) => onChange(helpers.setSchemaItems(s, schema))}\r\n            />\r\n          </SchemaBox>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SchemaCreator\r\n\r\ntype ArrayProps = {\r\n  schema: Schema\r\n  onChange: (schema: Schema) => void\r\n}\r\n\r\nconst SchemaArrayItems: React.FunctionComponent<ArrayProps> = ({\r\n  schema,\r\n  onChange\r\n}: ArrayProps) => {\r\n  return (\r\n    <div>\r\n      <SchemaArrayControls\r\n        schema={schema}\r\n        onChange={onChange}\r\n        onAdd={\r\n          helpers.isSchemaObject(schema)\r\n            ? () => onChange(helpers.addSchemaProperty(schema))\r\n            : undefined\r\n        }\r\n      />\r\n      {helpers.isSchemaObject(schema) && helpers.hasSchemaProperties(schema) && (\r\n        <div className='mt-2'>\r\n          <SchemaObjectProperties\r\n            onChangeKey={(oldkey, newkey) =>\r\n              onChange(helpers.renameSchemaProperty(oldkey, newkey, schema))\r\n            }\r\n            onDelete={(key) =>\r\n              onChange(helpers.deleteSchemaProperty(key)(schema))\r\n            }\r\n            onChange={(key, s) =>\r\n              onChange(helpers.setSchemaProperty(key)(s, schema))\r\n            }\r\n            schema={schema}\r\n          />\r\n        </div>\r\n      )}\r\n      {helpers.isSchemaArray(schema) && (\r\n        <SchemaBox>\r\n          <SchemaArrayItems\r\n            schema={helpers.getSchemaItems(schema)}\r\n            onChange={(s) => onChange(helpers.setSchemaItems(s, schema))}\r\n          />\r\n        </SchemaBox>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\ntype ObjectProps = {\r\n  schema: Schema\r\n  onDelete: (key: string) => void\r\n  onChangeKey: (oldKey: string, newKey: string) => void\r\n  onChange: (key: string, schema: Schema) => void\r\n}\r\n\r\nconst SchemaObjectProperties: React.FunctionComponent<ObjectProps> = ({\r\n  schema,\r\n  onChangeKey,\r\n  onDelete,\r\n  onChange\r\n}: ObjectProps) => {\r\n\r\n  return (\r\n    <ul className='grid gap-2 '>\r\n      {_.entries(helpers.getSchemaProperties(schema)).map(([key, s]) => (\r\n        <li key={key}>\r\n          <SchemaCreator\r\n            schema={s as Schema}\r\n            schemakey={key}\r\n            isRequired={helpers.isFieldRequired(key)(schema)}\r\n            onDelete={onDelete}\r\n            onChangeKey={(newKey) => onChangeKey(key, newKey)}\r\n            onChange={(newSchema) => onChange(key, newSchema)}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport {SchemaCreator} from '../SchemaCreator'\r\nimport { Schema } from '../../utils/types'\r\nimport { defaultSchema } from '../../utils/constants'\r\n\r\ntype Props = {\r\n  schema: Schema\r\n  onChange?: (newSchema: Schema) => void\r\n}\r\n\r\nconst JSONSchemaBuilder: React.FunctionComponent<Props> = ({\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <div>\r\n      <SchemaCreator schema={!_.isEmpty(schema) ? schema : defaultSchema} onChange={onChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JSONSchemaBuilder\r\n","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\nimport 'react-json-pretty/themes/1337.css'\r\n\r\n\r\nimport JSONSchemaBuilder, {Schema } from 'react-json-schema-builder'\r\nimport 'react-json-schema-builder/dist/index.css'\r\nimport jsonSchema from './schema.json'\r\n\r\nconst App = () => {\r\n  const [schema, setSchema] = React.useState<Schema>(jsonSchema)\r\n\r\n  return <div className=\"mx-auto grid gap-4 grid-flow-col p-8\">\r\n    <JSONSchemaBuilder schema={schema} onChange={setSchema} />\r\n    <JSONPretty data={schema}/>\r\n  </div>\r\n}\r\n\r\nexport default App\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}